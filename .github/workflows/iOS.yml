# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: iOS - Build, Test and Deploy iPA

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest
    steps:
      #- name: Check out the directory
      #  uses: actions/checkout@v2
      #  #run: echo " Print a single environment variable (the commit SHA ) - ${{ github.sha }} "
      #- run: echo "Print all environment variables - $ {{env}} "
      #- run: env
      
      # 1
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
          
      # 2
      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
           ruby-version: 2.7.2
           bundler-cache: true
 
      # 3
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
           p12-file-base64: ${{ secrets.IOS_DIST_SIGNING_KEY }}
           p12-password: ${{ secrets.IOS_DIST_SIGNING_KEY_PASSWORD }}
    
      # 4
      - name: Build & upload iOS binary
        run: bundle exec fastlane ios build_deploy_release
        env:
         ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
         ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
         ASC_KEY: ${{ secrets.ASC_PRIVATE_KEY }}
         KEYCHAIN_PATH: ~/Library/Keychains/signing_temp.keychain-db
 
      # 5
      - name: Upload app-store ipa and dsyms to artifacts
        uses: actions/upload-artifact@v2
        with:
         name: app-store ipa & dsyms
         path: |
           ${{ github.workspace }}/example-iOS.ipa
           ${{ github.workspace }}/*.app.dSYM.zip
