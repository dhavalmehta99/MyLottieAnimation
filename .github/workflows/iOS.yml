# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: iOS - Build, Test and Deploy iPA

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest
    steps:
      #- name: Check out the directory
      #  uses: actions/checkout@v2
      #  #run: echo " Print a single environment variable (the commit SHA ) - ${{ github.sha }} "
      #- run: echo "Print all environment variables - $ {{env}} "
      #- run: env
      
      # 1
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
          
      # 2
      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.8 # Used this version in local
          bundler-cache: true
          #ruby-version: 3.1.0
          #ruby-version: 2.7.2
        #with:
        #   ruby-version: 2.7.2
        #   bundler-cache: true
        
      # 3
      - name: Install Fastlane
        run: cd ios && bundle install

      # 4
      - name: Install packages
        run: npm install

      # 2.1
      #- name : Install/Update Bundler Forcefully
      #  run: |
      #    gem update --system
      #    gem update bundler
      #    gem install bundler
          
      #    sudo gem update --system
      #    echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
      #    source $BASH_ENV
      #    gem install bundler -v "1.17.2"
      #  # gem install bundler
 
      # 5
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
           p12-file-base64: ${{ secrets.DIST_CERT_BASE64 }}
           p12-password: ${{ secrets.DIST_CERT_P12_PASSWORD }}
    
      # 6
      - name: Build & upload iOS binary
        run: cd ios && bundle exec fastlane ios build_upload_testflight
        #run: bundle exec fastlane ios build_upload_testflight
        env:
         APPCONNECT_API_KEY_ID: ${{ secrets.APPCONNECT_API_KEY_ID }}
         APPCONNECT_API_ISSUER: ${{ secrets.APPCONNECT_API_ISSUER }}
         APPCONNECT_API_KEY_PRIVATE: ${{ secrets.APPCONNECT_API_KEY_PRIVATE }}
         KEYCHAIN_PATH: ~/Library/Keychains/signing_temp.keychain-db
        #env:
        # ASC_KEY_ID: ${{ secrets.APPCONNECT_API_KEY_ID }}
        # ASC_ISSUER_ID: ${{ secrets.APPCONNECT_API_ISSUER }}
        # ASC_KEY: ${{ secrets.APPCONNECT_API_KEY_PRIVATE }}
        # KEYCHAIN_PATH: ~/Library/Keychains/signing_temp.keychain-db
 
      # 7
      #- name: Upload app-store ipa and dsyms to artifacts
      #  uses: actions/upload-artifact@v2
      #  with:
      #   name: app-store ipa & dsyms
      #   path: |
      #     ${{ github.workspace }}/example-iOS.ipa
      #     ${{ github.workspace }}/*.app.dSYM.zip
