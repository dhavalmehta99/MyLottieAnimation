# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

DEVELOPER_APP_ID = ENV["DEVELOPER_APP_ID"]
# DEVELOPER_APP_IDENTIFIER = ENV["DEVELOPER_APP_IDENTIFIER"]
DEVELOPER_APP_IDENTIFIER = "com.logistic.pushtest"
PROVISIONING_PROFILE_SPECIFIER = ENV["PROVISIONING_PROFILE_SPECIFIER"]
# TEMP_KEYCHAIN_USER = ENV["TEMP_KEYCHAIN_USER"]
TEMP_KEYCHAIN_USER = "DhavalMehta"
# TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]
TEMP_KEYCHAIN_PASSWORD = "123456"
# APPLE_ISSUER_ID = ENV["APPLE_ISSUER_ID"]
APPLE_ISSUER_ID = "69a6de70-682f-47e3-e053-5b8c7c11a4d1"
# APPLE_KEY_ID = ENV["APPLE_KEY_ID"]
APPLE_KEY_ID = "NWAL8D5A93"
APPLE_KEY_CONTENT = ENV["APPLE_KEY_CONTENT"]
# GIT_AUTHORIZATION = ENV["GIT_AUTHORIZATION"]
GIT_AUTHORIZATION = "dhavalmehta99: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"

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: 0
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end


def setupCodeSigning(keychainName, keychainPassword, certificatePassword, profilePath, certificatePath)
	create_keychain(
	  name: keychainName,
	  password: keychainPassword,
	  default_keychain: true,
	  unlock: true,
	  timeout: 3600,
	  lock_when_sleeps: false
	)
	install_provisioning_profile(path: profilePath)
	import_certificate(
	  certificate_path: certificatePath,
	  certificate_password: certificatePassword,
	  keychain_name: keychainName,
	  keychain_password: keychainPassword
	)
  end


platform :ios do

	####################################################################################
	####################################################################################

	keychainName = "Dhaval Mehta"
	keychainPassword = "123456"

	desc "Build an iOS for internal testing"
  	lane :build do |options|
		app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
		api_key = app_store_connect_api_key(
			key_id: "#{APPLE_KEY_ID}",
			issuer_id: "#{APPLE_ISSUER_ID}",
		#   key_filepath: './AuthKey_NWAL8D5A93.p8'
			key_filepath: File.absolute_path("AuthKey_NWAL8D5A93.p8")
		)

		ensure_temp_keychain(keychainName, keychainPassword)

		# Create a custom keychain for code signing
		setup_ci

		# update_version

		# cert(
		# 	api_key: api_key,
		# 	keychain_path: "~/Library/Keychains/login.keychain-db" # the path to the keychain where your certificates are stored
		# )

		match(
			type: 'appstore',
			app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
			git_basic_authorization: Base64.strict_encode64(GIT_AUTHORIZATION),
			readonly: true,
			keychain_name: keychainName,
			keychain_password: keychainPassword,
			api_key: api_key
			)

		# update_code_signing_settings(
		# 	use_automatic_signing: false,
		# 	targets: ["LottieAnimationDemo"], # specify which targets to update code signing settings for
		# 	code_sign_identity: "Apple Distribution", # replace with name of code signing identity if different
		# 	bundle_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
		# 	# profile_name: File.absolute_path("Dist_PushTest.mobileprovision"),
		# 	profile_name: "Dist_PushTest",
		# 	build_configurations: ["Release"] # only toggle code signing settings for Release configurations
		# )

		# build the app
		gym(
			scheme: "LottieAnimationDemo", # replace with name of your projectâ€™s scheme
			output_name: "releaseLottieAnimationDemo",
			configuration: "Release",
			export_options: {
			method: "app-store",
			provisioningProfiles: {
				# app_identifier => File.absolute_path("Dist_PushTest.mobileprovision")
				# "com.logistic.pushtest" => "Dist_PushTest"
				"com.logistic.pushtest" => "AppStore com.logistic.pushtest"
			},
			compileBitcode: true
			}
		)

		# create_keychain(
		# 	name: "#{TEMP_KEYCHAIN_USER}",
		# 	password: "#{TEMP_KEYCHAIN_PASSWORD}",
		# 	default_keychain: false,
		# 	unlock: true,
		# 	timeout: 3600,
		# 	lock_when_sleeps: false
		# )

		# NOT WORKING match COMMAND - PASSPHARSE ERROR
		# match(
		# 	keychain_name: "#{TEMP_KEYCHAIN_USER}",
		# 	keychain_password: "#{TEMP_KEYCHAIN_PASSWORD}",
		# 	readonly: true,
		# 	type: "appstore"
		# )

		# import_certificate(
		# #   certificate_path: 'distribution.p12',
		# #   certificate_password: 'XXXXXXXXXXX',
		# #   certificate_path: '../cert/CertificatesDIST.p12',
		#   certificate_path: File.absolute_path("CertificatesDIST.p12"),
		#   certificate_password: '123456',
		#   keychain_name: "#{TEMP_KEYCHAIN_USER}",
		#   keychain_password: "#{TEMP_KEYCHAIN_PASSWORD}"
		# )
		
		## install_provisioning_profile(path: "Dist_PushTest.mobileprovision")
		# install_provisioning_profile(path: File.absolute_path("Dist_PushTest.mobileprovision"))

		# update_project_provisioning(
		# 	xcodeproj: 'LottieAnimationDemo.xcodeproj',
		# 	target_filter: 'LottieAnimationDemo',
		# #   profile: './Dist_PushTest.mobileprovision',
		# 	profile: File.absolute_path("Dist_PushTest.mobileprovision"),
		# 	build_configuration: 'Release'
		# )

		# build_app(
		# 	workspace: 'LottieAnimationDemo.xcworkspace', 
		# 	scheme: 'LottieAnimationDemo',
		# 	export_method: "app-store",
		# 	export_options: {
		# 	provisioningProfiles: { 
		# 		"#{DEVELOPER_APP_IDENTIFIER}" => File.absolute_path("Dist_PushTest.mobileprovision")
		# 	}
		# 	}
		# )
	end

	####################################################################################
	####################################################################################
	lane :update_version do |options|
		# updateVersion(options)
		increment_build_number(xcodeproj: 'LottieAnimationDemo.xcodeproj')
	end

	lane :temp_release do
		setup_ci

		update_version

		api_key = app_store_connect_api_key(
			key_id: "#{APPLE_KEY_ID}",
			issuer_id: "#{APPLE_ISSUER_ID}",
		#   key_filepath: './AuthKey_NWAL8D5A93.p8'
			key_filepath: File.absolute_path("AuthKey_NWAL8D5A93.p8")
		)

		# setupCodeSigning(
		# 	ENV["TEMP_KEYCHAIN_USER"], 
		# 	ENV["TEMP_KEYCHAIN_PASSWORD"], 
		# 	ENV["MATCH_PASSWORD"], # Certificate Password
		# 	File.absolute_path("Dist_PushTest.mobileprovision"),
		# 	File.absolute_path("CertificatesDIST.p12")
		# 	# './path-to-your-profile/your-profile.mobileprovision', 
		# 	#'./path-to-your-certificate/certificate.p12'
		# )

		# Import the appstore code signing
		# match(
		# 	type: "appstore",
		# 	keychain_name: TEMP_KEYCHAIN_USER,
		# 	keychain_password: TEMP_KEYCHAIN_PASSWORD,
		# 	readonly: true
		# )

		create_keychain(
			name: TEMP_KEYCHAIN_USER,
			password: TEMP_KEYCHAIN_PASSWORD,
			default_keychain: true,
			unlock: true,
			timeout: 3600,
			lock_when_sleeps: false
		)

		# match(
		# #   type: 'appstore',
		# #   app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
		# #   git_url: "https://github.com/dhavalmehta99/certificate",
		# # #   git_basic_authorization: Base64.strict_encode64(GIT_AUTHORIZATION),
		# #   readonly: true,
		# # #   keychain_name: TEMP_KEYCHAIN_USER,
		# #   keychain_password: TEMP_KEYCHAIN_PASSWORD,
		#   api_key: api_key
		# )

		cocoapods(
			clean_install: true, 
			use_bundle_exec: false, 
			error_callback: true
		)

		# Building the iOS app
		gym(
			workspace: "./LottieAnimationDemo.xcworkspace",
			include_bitcode: true,
			include_symbols: true,
			silent: true,
			clean: true,
			scheme: "LottieAnimationDemo",
			export_method: "app-store",
			export_xcargs: "-allowProvisioningUpdates"
		)

		# build_app(
		# 	scheme: "LottieAnimationDemo", 
		# 	configuration: 'Release'
		# )
		
		# cocoapods(
		# 	clean_install: true
		# )
		
		# cert
		# sigh(force: true)
		# match(type: 'appstore')
		
		
		
		# create_keychain(
		# 	name: "#{TEMP_KEYCHAIN_USER}",
		# 	password: "#{TEMP_KEYCHAIN_PASSWORD}",
		# 	timeout: 1800,
		# 	default_keychain: true,
		# 	unlock: true,
		# 	lock_when_sleeps: false
		# )

		# import_certificate(
		# #   certificate_path: 'distribution.p12',
		# #   certificate_password: 'XXXXXXXXXXX',
		# #   certificate_path: '../cert/CertificatesDIST.p12',
		# 	certificate_path: File.absolute_path("CertificatesDIST.p12"),
		# 	certificate_password: '123456',
		# 	keychain_name: "#{TEMP_KEYCHAIN_USER}",
		# 	keychain_password: "#{TEMP_KEYCHAIN_PASSWORD}"
		# )
		
		# # install_provisioning_profile(path: "./Dist_PushTest.mobileprovision")
		# install_provisioning_profile(path: File.absolute_path("Dist_PushTest.mobileprovision"))
		
		
		# update_project_provisioning(
		# 	xcodeproj: 'LottieAnimationDemo.xcodeproj',
		# 	target_filter: 'LottieAnimationDemo',
		# #   profile: './Dist_PushTest.mobileprovision',
		# 	profile: File.absolute_path("Dist_PushTest.mobileprovision"),
		# 	build_configuration: 'Release'
		# )

		
		
		# build_app

		upload_to_testflight(
			apple_id: "#{DEVELOPER_APP_ID}",
			skip_submission: true,	
			skip_waiting_for_build_processing: true,
			api_key: api_key
		)
	end
	####################################################################################
	####################################################################################

	  lane :github do |_options|
		update_version

		api_key = app_store_connect_api_key(
		  key_id: "#{APPLE_KEY_ID}",
		  issuer_id: "#{APPLE_ISSUER_ID}",
		#   key_filepath: '../cert/AuthKey_NWAL8D5A93.p8'
		  key_filepath: File.absolute_path("AuthKey_NWAL8D5A93.p8")
		)
		
		create_keychain(
		  name: "#{TEMP_KEYCHAIN_USER}",
		  password: "#{TEMP_KEYCHAIN_PASSWORD}",
		  timeout: 1800,
		  default_keychain: true,
		  unlock: true,
		  lock_when_sleeps: false
		)

		import_certificate(
		#   certificate_path: 'distribution.p12',
		#   certificate_password: 'XXXXXXXXXXX',
		#   certificate_path: '../cert/CertificatesDIST.p12',
		  certificate_path: File.absolute_path("CertificatesDIST.p12"),
		  certificate_password: '123456',
		  keychain_name: "#{TEMP_KEYCHAIN_USER}",
		  keychain_password: "#{TEMP_KEYCHAIN_PASSWORD}"
		)
		
		# install_provisioning_profile(path: "Dist_PushTest.mobileprovision")
		install_provisioning_profile(path: File.absolute_path("Dist_PushTest.mobileprovision"))
		
		update_project_provisioning(
		  xcodeproj: 'LottieAnimationDemo.xcodeproj',
		  target_filter: 'LottieAnimationDemo',
		#   profile: 'Dist_PushTest.mobileprovision',
		  profile: File.absolute_path("Dist_PushTest.mobileprovision"),
		  build_configuration: 'Release'
		)
		
		# disable_automatic_code_signing(path: "LottieAnimationDemo.xcodeproj")
		build_app(
			workspace: 'LottieAnimationDemo.xcworkspace', 
			scheme: 'LottieAnimationDemo'
		)
		

		# enable_automatic_code_signing(path: "LottieAnimationDemo.xcodeproj")
		upload_to_testflight(
			skip_submission: true,
			skip_waiting_for_build_processing: true
		)

		# upload_to_app_store(
		#   force: true,
		#   reject_if_possible: true,
		#   skip_metadata: false,
		#   skip_screenshots: true,
		#   languages: ['en'],
		#   release_notes: {
		# 	'default' => 'bug fixed',
		# 	'ko' => 'bug fixed'
		#   },
		#   submit_for_review: true,
		#   precheck_include_in_app_purchases: false,
		#   automatic_release: true,
		#   submission_information: {
		# 	add_id_info_uses_idfa: true,
		# 	add_id_info_serves_ads: true,
		# 	add_id_info_tracks_install: true,
		# 	add_id_info_tracks_action: false,
		# 	add_id_info_limits_tracking: true,
		# 	export_compliance_encryption_updated: false
		#   },
		#   api_key: api_key
		# )
	end
	####################################################################################
	####################################################################################


	lane :closed_beta do
		keychain_name = TEMP_KEYCHAIN_USER
		keychain_password = TEMP_KEYCHAIN_PASSWORD
		ensure_temp_keychain(keychain_name, keychain_password)
	
		api_key = app_store_connect_api_key(
		  key_id: APPLE_KEY_ID,
		  issuer_id: APPLE_ISSUER_ID,
		  key_content: APPLE_KEY_CONTENT,            
		  duration: 1200,            
		  in_house: false
		)
		
		increment_build_number(xcodeproj: "LottieAnimationDemo.xcodeproj")
		
		cocoapods(
		  clean_install: true,
		  podfile: "../../ios"
		)
	
		match(
		  type: 'appstore',
		  app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
		  git_basic_authorization: Base64.strict_encode64(GIT_AUTHORIZATION),
		  readonly: true,
		  keychain_name: keychain_name,
		  keychain_password: keychain_password,
		  api_key: api_key
		)
	
		gym(
		  configuration: "Release",
		  workspace: "LottieAnimationDemo.xcworkspace",
		  scheme: "LottieAnimationDemo",
		  export_method: "app-store",
		  export_options: {
			provisioningProfiles: { 
				DEVELOPER_APP_ID => PROVISIONING_PROFILE_SPECIFIER
			}
		  }
		)
	
		pilot(
		  apple_id: "#{DEVELOPER_APP_ID}",
		  app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
		  skip_waiting_for_build_processing: true,
		  skip_submission: true,
		  distribute_external: false,
		  notify_external_testers: false,
		  ipa: "./LottieAnimationDemo.ipa"
		)
	
		delete_temp_keychain(keychain_name)
	  end
end
